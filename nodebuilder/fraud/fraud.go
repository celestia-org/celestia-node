package fraud

import (
	"context"

	"github.com/celestiaorg/celestia-node/fraud"
)

// Module encompasses the behavior necessary to subscribe and broadcast fraud proofs within the
// network. Any method signature changed here needs to also be changed in the API struct.
//
//go:generate mockgen -destination=mocks/api.go -package=mocks . Module
type Module interface {
	// Get fetches fraud proofs from the disk by its type.
	Get(context.Context, fraud.ProofType) ([]Proof, error)
	// Subscribe allows to subscribe on a Proof pub sub topic by its type.
	Subscribe(context.Context, fraud.ProofType) (<-chan Proof, error)
}

// API is a wrapper around Module for the RPC.
// TODO(@distractedm1nd): These structs need to be autogenerated.
type API struct {
	Subscribe func(context.Context, fraud.ProofType) (<-chan Proof, error)
	Get       func(context.Context, fraud.ProofType) ([]Proof, error)
}
